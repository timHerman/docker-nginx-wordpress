server {
	listen 80 default_server;
	listen [::]:80 default_server ipv6only=on;

	index               index.php index.html index.htm;
	root                /var/www/htdocs;
	access_log          /var/www/logs/access.log;
	error_log           /var/www/logs/error.log;

	index index.html index.htm;

	# Make site accessible from http://localhost/
	server_name localhost;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		#try_files $uri $uri/ =404;
		try_files $uri $uri/ /index.php?$args;
		# Uncomment to enable naxsi on this location
		# include /etc/nginx/naxsi.rules
	}

	# Deny access to hidden files
	location ~* /\.ht {
		deny            all;
		access_log      off;
		log_not_found   off;
	}

	# Pass PHP scripts on to PHP-FPM
	location ~* \.php$ {
		#try_files       $uri /index.php;
		fastcgi_index   index.php;
		fastcgi_pass 	unix:/var/run/php5-fpm.sock;
		include         fastcgi_params;
		fastcgi_param   SCRIPT_FILENAME    $document_root$fastcgi_script_name;
		fastcgi_param   SCRIPT_NAME        $fastcgi_script_name;
		#try_files 	$uri /index.php?$args;
		#try_files $uri $uri/ /index.php?q=$request_uri;
	}

	# Set a variable to work around the lack of nested conditionals
	set $cache_uri $request_uri;

	# POST requests and urls with a query string should always go to PHP
	if ($request_method = POST) {
		set $cache_uri 'no cache';
	}   
	if ($query_string != "") {
		set $cache_uri 'no cache';
	}   

	# Don't cache uris containing the following segments
	if ($request_uri ~* "(\/wp-admin\/|\/xmlrpc.php|\/wp-(app|cron|login|register|mail)\.php|wp-.*\.php|index\.php|wp\-comments\-popup\.php|wp\-links\-opml\.php|wp\-locations\.php)") {
		set $cache_uri "no cache";
	}

	# Don't use the cache for logged in users or recent commenters
	if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp\-postpass|wordpress_logged_in") {
		set $cache_uri 'no cache';
	}

	include /var/www/htdocs/nginx*conf;
}
